  /*
Целое число, большее 1, называется простым, если оно не делится нацело ни на какое другое, кроме себя и 1.

Древний алгоритм «Решето Эратосфена» для поиска всех простых чисел до n выглядит так:

1.Создать список последовательных чисел от 2 до n: 2, 3, 4, ..., n.
2.Пусть p=2, это первое простое число.
3.Зачеркнуть все последующие числа в списке с разницей в p, т.е. 2*p, 3*p, 4*p и т.д. В случае p=2 это будут 4,6,8....
4.Поменять значение p на первое не зачеркнутое число после p.
5.Повторить шаги 3-4 пока p2 < n.
6.Все оставшиеся не зачеркнутыми числа – простые.

Реализуйте «Решето Эратосфена» в JavaScript, используя массив.

Найдите все простые числа до 100 и выведите их сумму.
  */
//1
   var sieve = [];
   for(var i=2;i<100;i++){
     sieve[i] = true;
   }
//2   
   var p = 2;
   
  do{
//3
   for(i = 2*p; i<100; i += p){
     sieve[i] = false;
   }
//4
   for (i = p+1; i< 100; i++){
     if (sieve[i]) break;
   }
   p = i;
  } while (p*p < 100); //5
  
  //сумма
  var sum = 0;
  for (i = 0; i < sieve.length; i++) {
  if (sieve[i]) {
    sum += i;
  }
}

alert( sum );

/*-------------------------короткая версия------------------------------------*/
  var sieve = [];
  for(var i=2;i<100;i++){
    sieve[i] = true;
  }

for (i=2;i<100;i++){
  if (sieve[i]) {
    for (var j=2;i*j<100;j++)
     sieve[i*j] = false;
  }
}
