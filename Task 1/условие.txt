Задание 1.

Джек построил дом, чтобы в нём жить!
Джеку понравилось, и он решил построить еще один и продал =) Заработал денег и вложился опять в строительство еще десятка домов.
В итоге Джек стал предпринимателем =)  
Всё строил и продавал дома, некоторые решил сдавать помесячно, некоторые посуточно.
Очень много недвижимости в собственности у Джека. Как-то надо всё это надо контролировать и вести отчетность. За сколько был построен дом, за сколько продан. Кто сейчас живет в арендуемом доме и когда надо взымать арендную плату. Путаться Джек стал =(

Необходимо создать базу данных, где будут храниться данные о недвижимости Джека, чтобы он мог всегда ответить на следующие вопросы.
1. Сколько у меня домов в аренде, а сколько на продажу и сколько я уже продал?
2. Сколько у меня арендаторов и кто, когда и сколько платит?
3. Сколько стоит всё моё недвижимое имущество?
4. Когда были построены мои дома на Бейкер стрит и Малхолланд Драйв?
5. Сколько арендаторов не заплатили за последние 3 месяца?

Результат задания должен быть представлен в виде SQL запроса создание базы данных. Также запросы, отвечающие на 5 вопросов. Для PostgreSQL или MySQL.

Задание 2

На вход программы поступает строка вида "5+10*25 - 70 / 35"
Задача программы - вычислить значение введенного выражения с учетом приоритета операций ограничения:
 - строка произвольной длины
 - произвольные рациональные числа, разделитель целой и дробной части - точка
 - дробные числа пишутся всегда в формате <целая часть>.<дробная часть>, т.е. допустимо написать "45.3323" или "0.134", но не допустимо ".234"
 - возможна запись числа с лидирующими нулями или замыкающими нулями в дробной части, т.е. числа "024" и "24.5000" допустимы
 - унарный минус не учитывать, т.е. запись типа "5 + -10" недопустима, так же как недопустима запись "-5 + 10"
 - поддерживаются 4 операции - сложение, вычитание, умножение, деление
 - вычисление происходит с учетом приоритета операций
 - менять приоритет скобками нельзя, т.е. скобки недопустимы
 - между числами и арифметическими знаками допустимо произвольное число пробелов
 - пробелы недопустимы внутри числа, т.е. число "1 000" не допустимо